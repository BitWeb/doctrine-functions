{"name":"Doctrine-functions","tagline":"Set of DQL functions for Doctrine 2","body":"Doctrine Functions\r\n==================\r\n\r\nThis package contains doctrine functions, you can contribute by forking it and propose pull request with your own functions.\r\nBy defaults it add these:\r\n\r\n* `DATE(expr)`\r\n* `DATEDIFF(expr1, expr2)`\r\n* `DAYOFWEEK(expr)`\r\n* `DAYOFMONTH(expr)`\r\n* `DAYOFYEAR(expr)`\r\n* `HOUR(expr)`\r\n* `MINUTE(expr)`\r\n* `MONTH(expr)`\r\n* `SECOND(expr)`\r\n* `TIME(expr)`\r\n* `YEAR(expr)`\r\n\r\nEdit this file in your pull request to add your function to the list.\r\n\r\nInstallation\r\n------------\r\n\r\nJust add the package to your `composer.json`\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"luxifer/doctrine-functions\": \"dev-master\"\r\n    }\r\n}\r\n```\r\n\r\nIntegration\r\n-----------\r\n\r\n### 1) Doctrine Only\r\n\r\nAccording to the [Doctrine documentation](http://docs.doctrine-project.org/en/2.0.x/cookbook/dql-user-defined-functions.html \"Doctrine documentation\") you can register the functions in this package this way.\r\n\r\n```php\r\n<?php\r\n$config = new \\Doctrine\\ORM\\Configuration();\r\n$config->addCustomDatetimeFunction('date', 'Luxifer\\DQL\\Datetime\\Date');\r\n\r\n$em = EntityManager::create($dbParams, $config);\r\n```\r\n\r\n### 2) Using Symfony 2\r\n\r\nWith symfony 2 you can register yout functions directly in the `config.yml` file.\r\n\r\n```yaml\r\ndoctrine:\r\n    orm:\r\n        entity_managers:\r\n            default:\r\n                dql:\r\n                    datetime_functions:\r\n                        date: Luxifer\\DQL\\Datetime\\Date\r\n```\r\n\r\nTODO\r\n----\r\n\r\n* Add test case","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}